# Generated by Django 5.1.11 on 2025-08-11 09:11

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('DAILY_REVENUE', 'Daily Revenue'), ('WEEKLY_REVENUE', 'Weekly Revenue'), ('MONTHLY_REVENUE', 'Monthly Revenue'), ('PRODUCT_UTILIZATION', 'Product Utilization'), ('CUSTOMER_LIFETIME_VALUE', 'Customer Lifetime Value'), ('AVERAGE_RENTAL_DURATION', 'Average Rental Duration'), ('OVERDUE_RATE', 'Overdue Rate'), ('PAYMENT_SUCCESS_RATE', 'Payment Success Rate')], max_length=30)),
                ('date', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('secondary_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('entity_id', models.UUIDField(blank=True, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Analytics',
                'verbose_name_plural': 'Analytics',
                'db_table': 'analytics',
                'indexes': [models.Index(fields=['metric_type', 'date'], name='analytics_metric__cb9205_idx'), models.Index(fields=['entity_type', 'entity_id', 'date'], name='analytics_entity__22ce26_idx')],
                'constraints': [models.UniqueConstraint(fields=('metric_type', 'date', 'entity_id'), name='unique_metric_date_entity')],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('widget_type', models.CharField(choices=[('METRIC', 'Single Metric'), ('CHART', 'Chart'), ('TABLE', 'Table'), ('GAUGE', 'Gauge'), ('MAP', 'Map')], max_length=10)),
                ('chart_type', models.CharField(blank=True, choices=[('LINE', 'Line Chart'), ('BAR', 'Bar Chart'), ('PIE', 'Pie Chart'), ('DOUGHNUT', 'Doughnut Chart'), ('AREA', 'Area Chart')], max_length=15)),
                ('data_source', models.TextField()),
                ('refresh_interval', models.PositiveIntegerField(default=300)),
                ('width', models.PositiveIntegerField(default=6)),
                ('height', models.PositiveIntegerField(default=4)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('color_scheme', models.JSONField(blank=True, default=list)),
                ('display_options', models.JSONField(blank=True, default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(blank=True, default=list)),
                ('cached_data', models.JSONField(blank=True, default=dict)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_dashboard_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'db_table': 'dashboard_widgets',
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('filters_applied', models.JSONField(blank=True, default=dict)),
                ('date_range_start', models.DateField(blank=True, null=True)),
                ('date_range_end', models.DateField(blank=True, null=True)),
                ('output_format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], max_length=10)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('file_size', models.PositiveBigIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('GENERATING', 'Generating'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('EXPIRED', 'Expired')], default='PENDING', max_length=15)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_records', models.PositiveIntegerField(blank=True, null=True)),
                ('generation_time_seconds', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('is_shared', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_reports', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'db_table': 'reports',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('VIEW', 'Viewed'), ('DOWNLOAD', 'Downloaded'), ('SHARE', 'Shared'), ('DELETE', 'Deleted')], max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='reports.report')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Access',
                'verbose_name_plural': 'Report Access',
                'db_table': 'report_access',
                'ordering': ['-accessed_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('report_type', models.CharField(choices=[('RENTAL_SUMMARY', 'Rental Summary'), ('REVENUE_ANALYSIS', 'Revenue Analysis'), ('PRODUCT_UTILIZATION', 'Product Utilization'), ('CUSTOMER_ANALYSIS', 'Customer Analysis'), ('OVERDUE_REPORT', 'Overdue Report'), ('PAYMENT_REPORT', 'Payment Report'), ('INVENTORY_REPORT', 'Inventory Report'), ('DELIVERY_PERFORMANCE', 'Delivery Performance'), ('DAMAGE_REPORT', 'Damage Report'), ('CUSTOM', 'Custom Report')], max_length=25)),
                ('description', models.TextField(blank=True)),
                ('base_query', models.TextField()),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('default_format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], default='PDF', max_length=10)),
                ('columns', models.JSONField(blank=True, default=list)),
                ('can_be_scheduled', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system_template', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_report_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'db_table': 'report_templates',
            },
        ),
        migrations.AddField(
            model_name='report',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.reporttemplate'),
        ),
        migrations.CreateModel(
            name='ScheduledReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=15)),
                ('schedule_time', models.TimeField(default='09:00:00')),
                ('default_filters', models.JSONField(blank=True, default=dict)),
                ('output_format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], max_length=10)),
                ('email_recipients', models.JSONField(blank=True, default=list)),
                ('auto_send_email', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=15)),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('next_run_at', models.DateTimeField(blank=True, null=True)),
                ('consecutive_failures', models.PositiveIntegerField(default=0)),
                ('max_failures', models.PositiveIntegerField(default=3)),
                ('last_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_scheduled_reports', to=settings.AUTH_USER_MODEL)),
                ('last_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reports.report')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Scheduled Report',
                'verbose_name_plural': 'Scheduled Reports',
                'db_table': 'scheduled_reports',
            },
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['requested_by', 'status'], name='reports_request_84289d_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['template', 'status'], name='reports_templat_33ab9e_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['status', 'requested_at'], name='reports_status_ffbda1_idx'),
        ),
    ]
