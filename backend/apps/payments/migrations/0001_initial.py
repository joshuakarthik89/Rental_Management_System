# Generated by Django 5.1.11 on 2025-08-11 05:19

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('invoicing', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('provider_type', models.CharField(choices=[('STRIPE', 'Stripe'), ('RAZORPAY', 'Razorpay'), ('PAYPAL', 'PayPal'), ('PAYU', 'PayU'), ('CASHFREE', 'Cashfree'), ('BANK_TRANSFER', 'Bank Transfer'), ('CASH', 'Cash'), ('CHEQUE', 'Cheque')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_test_mode', models.BooleanField(default=False)),
                ('api_key', models.TextField(blank=True)),
                ('api_secret', models.TextField(blank=True)),
                ('webhook_secret', models.TextField(blank=True)),
                ('currency_supported', models.JSONField(default=list)),
                ('min_amount', models.DecimalField(decimal_places=2, default=1.0, max_digits=12)),
                ('max_amount', models.DecimalField(decimal_places=2, default=100000.0, max_digits=12)),
                ('processing_fee_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('processing_fee_fixed', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('description', models.TextField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment Provider',
                'verbose_name_plural': 'Payment Providers',
                'db_table': 'payment_providers',
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_holder_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=50)),
                ('routing_number', models.CharField(blank=True, max_length=20)),
                ('ifsc_code', models.CharField(blank=True, max_length=20)),
                ('swift_code', models.CharField(blank=True, max_length=20)),
                ('bank_name', models.CharField(max_length=255)),
                ('branch_name', models.CharField(blank=True, max_length=255)),
                ('account_type', models.CharField(choices=[('CHECKING', 'Checking'), ('SAVINGS', 'Savings'), ('BUSINESS', 'Business')], default='CHECKING', max_length=15)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_document', models.FileField(blank=True, null=True, upload_to='bank_documents/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'db_table': 'bank_accounts',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_number', models.CharField(max_length=64, unique=True)),
                ('payment_method', models.CharField(choices=[('CREDIT_CARD', 'Credit Card'), ('DEBIT_CARD', 'Debit Card'), ('NET_BANKING', 'Net Banking'), ('UPI', 'UPI'), ('WALLET', 'Digital Wallet'), ('BANK_TRANSFER', 'Bank Transfer'), ('CASH', 'Cash'), ('CHEQUE', 'Cheque')], max_length=20)),
                ('gateway_payment_id', models.CharField(blank=True, max_length=255)),
                ('gateway_order_id', models.CharField(blank=True, max_length=255)),
                ('gateway_signature', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('refunded_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded'), ('PARTIAL_REFUND', 'Partially Refunded')], default='PENDING', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('receipt_number', models.CharField(blank=True, max_length=64)),
                ('receipt_url', models.URLField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='invoicing.invoice')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payments.paymentprovider')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('link_id', models.CharField(max_length=64, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=15)),
                ('expires_at', models.DateTimeField()),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('max_access_count', models.PositiveIntegerField(default=10)),
                ('send_sms', models.BooleanField(default=False)),
                ('send_email', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payment_links', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customer_payment_links', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_links', to='invoicing.invoice')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.payment')),
            ],
            options={
                'verbose_name': 'Payment Link',
                'verbose_name_plural': 'Payment Links',
                'db_table': 'payment_links',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('refund_number', models.CharField(max_length=64, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=15)),
                ('gateway_refund_id', models.CharField(blank=True, max_length=255)),
                ('reason', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payment_refunds', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='refunds', to='payments.payment')),
            ],
            options={
                'verbose_name': 'Payment Refund',
                'verbose_name_plural': 'Payment Refunds',
                'db_table': 'payment_refunds',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_id', models.CharField(max_length=255)),
                ('event_type', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('RECEIVED', 'Received'), ('PROCESSING', 'Processing'), ('PROCESSED', 'Processed'), ('FAILED', 'Failed'), ('IGNORED', 'Ignored')], default='RECEIVED', max_length=15)),
                ('payload', models.JSONField()),
                ('headers', models.JSONField(default=dict)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_notes', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('signature_verified', models.BooleanField(default=False)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.payment')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payments.paymentprovider')),
                ('refund', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymentrefund')),
            ],
            options={
                'verbose_name': 'Webhook Event',
                'verbose_name_plural': 'Webhook Events',
                'db_table': 'webhook_events',
                'ordering': ['-received_at'],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['customer', 'status'], name='payments_custome_04132e_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['invoice'], name='payments_invoice_9dd568_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_number'], name='payments_payment_c27a96_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['gateway_payment_id'], name='payments_gateway_e04247_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='payments_status_426d4f_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['provider', 'event_type'], name='webhook_eve_provide_772ce2_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['event_id'], name='webhook_eve_event_i_bb7559_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['status', 'received_at'], name='webhook_eve_status_f769dd_idx'),
        ),
        migrations.AddConstraint(
            model_name='webhookevent',
            constraint=models.UniqueConstraint(fields=('provider', 'event_id'), name='unique_provider_event'),
        ),
    ]
