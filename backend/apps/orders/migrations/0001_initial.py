# Generated by Django 5.1.11 on 2025-08-11 05:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '__first__'),
        ('pricing', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RentalOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(choices=[('CONFIRMED', 'Confirmed'), ('RESERVED', 'Items Reserved'), ('PICKUP_SCHEDULED', 'Pickup Scheduled'), ('PICKED_UP', 'Items Picked Up'), ('ACTIVE', 'Rental Active'), ('RETURN_SCHEDULED', 'Return Scheduled'), ('RETURNED', 'Items Returned'), ('COMPLETED', 'Order Completed'), ('CANCELLED', 'Cancelled')], default='CONFIRMED', max_length=20)),
                ('rental_start', models.DateTimeField()),
                ('rental_end', models.DateTimeField()),
                ('actual_pickup_at', models.DateTimeField(blank=True, null=True)),
                ('actual_return_at', models.DateTimeField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('late_fee_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('pickup_address', models.TextField(blank=True)),
                ('return_address', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_orders', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rental_orders', to=settings.AUTH_USER_MODEL)),
                ('price_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.pricelist')),
            ],
            options={
                'verbose_name': 'Rental Order',
                'verbose_name_plural': 'Rental Orders',
                'db_table': 'rental_orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RentalContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=64, unique=True)),
                ('terms_and_conditions', models.TextField()),
                ('customer_signature', models.TextField(blank=True)),
                ('staff_signature', models.TextField(blank=True)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='contracts/')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='orders.rentalorder')),
            ],
            options={
                'verbose_name': 'Rental Contract',
                'verbose_name_plural': 'Rental Contracts',
                'db_table': 'rental_contracts',
            },
        ),
        migrations.CreateModel(
            name='RentalQuote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quote_number', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent to Customer'), ('CONFIRMED', 'Confirmed by Customer'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('notes', models.TextField(blank=True)),
                ('terms_conditions', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_quotes', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rental_quotes', to=settings.AUTH_USER_MODEL)),
                ('price_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pricing.pricelist')),
            ],
            options={
                'verbose_name': 'Rental Quote',
                'verbose_name_plural': 'Rental Quotes',
                'db_table': 'rental_quotes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='rentalorder',
            name='quote',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.rentalquote'),
        ),
        migrations.CreateModel(
            name='QuoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('rental_unit', models.CharField(default='DAY', max_length=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.product')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.rentalquote')),
            ],
            options={
                'verbose_name': 'Quote Item',
                'verbose_name_plural': 'Quote Items',
                'db_table': 'quote_items',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('RESERVED', 'Reserved'), ('ACTIVE', 'Active Rental'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='RESERVED', max_length=20)),
                ('reserved_at', models.DateTimeField(auto_now_add=True)),
                ('pickup_scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('actual_pickup_at', models.DateTimeField(blank=True, null=True)),
                ('return_due_at', models.DateTimeField()),
                ('actual_return_at', models.DateTimeField(blank=True, null=True)),
                ('pickup_location', models.TextField(blank=True)),
                ('return_location', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='orders.rentalorder')),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
                'db_table': 'reservations',
                'ordering': ['-reserved_at'],
            },
        ),
        migrations.CreateModel(
            name='ReservationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.product')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.reservation')),
            ],
            options={
                'verbose_name': 'Reservation Item',
                'verbose_name_plural': 'Reservation Items',
                'db_table': 'reservation_items',
            },
        ),
        migrations.CreateModel(
            name='RentalItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('rental_unit', models.CharField(default='DAY', max_length=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.product')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.rentalorder')),
            ],
            options={
                'verbose_name': 'Rental Item',
                'verbose_name_plural': 'Rental Items',
                'db_table': 'rental_items',
                'indexes': [models.Index(fields=['order', 'product'], name='rental_item_order_i_cfc652_idx'), models.Index(fields=['product', 'start_datetime', 'end_datetime'], name='rental_item_product_61db85_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='rentalquote',
            index=models.Index(fields=['customer', 'status'], name='rental_quot_custome_651aff_idx'),
        ),
        migrations.AddIndex(
            model_name='rentalquote',
            index=models.Index(fields=['quote_number'], name='rental_quot_quote_n_5be938_idx'),
        ),
        migrations.AddIndex(
            model_name='rentalquote',
            index=models.Index(fields=['status', 'created_at'], name='rental_quot_status_bc24cd_idx'),
        ),
        migrations.AddIndex(
            model_name='rentalorder',
            index=models.Index(fields=['customer', 'status'], name='rental_orde_custome_ec257c_idx'),
        ),
        migrations.AddIndex(
            model_name='rentalorder',
            index=models.Index(fields=['order_number'], name='rental_orde_order_n_44d950_idx'),
        ),
        migrations.AddIndex(
            model_name='rentalorder',
            index=models.Index(fields=['status', 'rental_start'], name='rental_orde_status_2b00be_idx'),
        ),
        migrations.AddIndex(
            model_name='rentalorder',
            index=models.Index(fields=['rental_start', 'rental_end'], name='rental_orde_rental__0f1664_idx'),
        ),
        migrations.AddIndex(
            model_name='quoteitem',
            index=models.Index(fields=['quote', 'product'], name='quote_items_quote_i_a66040_idx'),
        ),
        migrations.AddIndex(
            model_name='quoteitem',
            index=models.Index(fields=['product', 'start_datetime', 'end_datetime'], name='quote_items_product_65a765_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['order', 'status'], name='reservation_order_i_8b5da0_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['status', 'return_due_at'], name='reservation_status_5b07fa_idx'),
        ),
        migrations.AddIndex(
            model_name='reservationitem',
            index=models.Index(fields=['reservation', 'product'], name='reservation_reserva_21a0eb_idx'),
        ),
        migrations.AddIndex(
            model_name='reservationitem',
            index=models.Index(fields=['product', 'start_datetime', 'end_datetime'], name='reservation_product_05b459_idx'),
        ),
    ]
