# Generated by Django 5.1.11 on 2025-08-11 09:10

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoiceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('invoice_type', models.CharField(choices=[('RENTAL', 'Rental Invoice'), ('DEPOSIT', 'Security Deposit'), ('LATE_FEE', 'Late Fee'), ('DAMAGE', 'Damage Charges'), ('ADJUSTMENT', 'Adjustment')], max_length=15)),
                ('header_text', models.TextField(blank=True)),
                ('footer_text', models.TextField(blank=True)),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('default_payment_terms', models.CharField(default='Net 30', max_length=100)),
                ('default_due_days', models.PositiveIntegerField(default=30)),
                ('include_tax', models.BooleanField(default=True)),
                ('default_tax_rate', models.DecimalField(decimal_places=2, default=18.0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Invoice Template',
                'verbose_name_plural': 'Invoice Templates',
                'db_table': 'invoice_templates',
            },
        ),
        migrations.CreateModel(
            name='PaymentTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('due_days', models.PositiveIntegerField()),
                ('early_payment_discount', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('early_payment_days', models.PositiveIntegerField(default=0)),
                ('late_fee_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('late_fee_grace_days', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Payment Term',
                'verbose_name_plural': 'Payment Terms',
                'db_table': 'payment_terms',
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax_type', models.CharField(choices=[('gst', 'GST'), ('vat', 'VAT'), ('sales_tax', 'Sales Tax'), ('service_tax', 'Service Tax')], max_length=20)),
                ('applicable_to_products', models.BooleanField(default=True)),
                ('applicable_to_services', models.BooleanField(default=True)),
                ('country', models.CharField(default='India', max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('effective_from', models.DateField(default=django.utils.timezone.now)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tax Rate',
                'verbose_name_plural': 'Tax Rates',
                'db_table': 'tax_rates',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=64, unique=True)),
                ('invoice_type', models.CharField(choices=[('RENTAL', 'Rental Invoice'), ('DEPOSIT', 'Security Deposit'), ('LATE_FEE', 'Late Fee'), ('DAMAGE', 'Damage Charges'), ('ADJUSTMENT', 'Adjustment')], default='RENTAL', max_length=15)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('PARTIAL', 'Partially Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='DRAFT', max_length=15)),
                ('billing_name', models.CharField(max_length=255)),
                ('billing_email', models.EmailField(max_length=254)),
                ('billing_address', models.TextField()),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('invoice_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField()),
                ('payment_terms', models.CharField(default='Net 30', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('tax_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='orders.rentalorder')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('credit_note_number', models.CharField(max_length=64, unique=True)),
                ('credit_type', models.CharField(choices=[('REFUND', 'Refund'), ('ADJUSTMENT', 'Adjustment'), ('DISCOUNT', 'Discount'), ('RETURN', 'Early Return')], max_length=15)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ISSUED', 'Issued'), ('APPLIED', 'Applied'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=15)),
                ('credit_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('applied_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('reason', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_credit_notes', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_notes', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_notes', to='orders.rentalorder')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_notes', to='invoicing.invoice')),
            ],
            options={
                'verbose_name': 'Credit Note',
                'verbose_name_plural': 'Credit Notes',
                'db_table': 'credit_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('rental_start', models.DateTimeField(blank=True, null=True)),
                ('rental_end', models.DateTimeField(blank=True, null=True)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='invoicing.invoice')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.product')),
            ],
            options={
                'verbose_name': 'Invoice Line',
                'verbose_name_plural': 'Invoice Lines',
                'db_table': 'invoice_lines',
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['customer', 'status'], name='invoices_custome_90a13d_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='invoices_invoice_7778bc_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status', 'due_date'], name='invoices_status_73cf28_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['order'], name='invoices_order_i_2507ee_idx'),
        ),
        migrations.AddIndex(
            model_name='creditnote',
            index=models.Index(fields=['customer', 'status'], name='credit_note_custome_58f01b_idx'),
        ),
        migrations.AddIndex(
            model_name='creditnote',
            index=models.Index(fields=['credit_note_number'], name='credit_note_credit__511c6e_idx'),
        ),
        migrations.AddIndex(
            model_name='creditnote',
            index=models.Index(fields=['invoice'], name='credit_note_invoice_d48a0d_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceline',
            index=models.Index(fields=['invoice', 'product'], name='invoice_lin_invoice_75a727_idx'),
        ),
    ]
