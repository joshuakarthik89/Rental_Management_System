# Generated by Django 5.1.11 on 2025-08-11 09:11

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('invoicing', '0001_initial'),
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('provider_type', models.CharField(choices=[('SMTP', 'SMTP Email'), ('SENDGRID', 'SendGrid'), ('MAILGUN', 'Mailgun'), ('SES', 'Amazon SES'), ('TWILIO', 'Twilio SMS'), ('FIREBASE', 'Firebase Push'), ('WHATSAPP_BUSINESS', 'WhatsApp Business')], max_length=20)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification'), ('WHATSAPP', 'WhatsApp')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('api_key', models.TextField(blank=True)),
                ('api_secret', models.TextField(blank=True)),
                ('api_endpoint', models.URLField(blank=True)),
                ('configuration', models.JSONField(blank=True, default=dict)),
                ('rate_limit_per_minute', models.PositiveIntegerField(blank=True, null=True)),
                ('rate_limit_per_hour', models.PositiveIntegerField(blank=True, null=True)),
                ('rate_limit_per_day', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Provider',
                'verbose_name_plural': 'Notification Providers',
                'db_table': 'notification_providers',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation', models.CharField(choices=[('PICKUP_REMINDERS', 'Pickup Reminders'), ('RETURN_REMINDERS', 'Return Reminders'), ('OVERDUE_NOTICES', 'Overdue Notices'), ('PAYMENT_REMINDERS', 'Payment Reminders'), ('BULK_NOTIFICATION', 'Bulk Notification')], max_length=25)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_notifications', models.PositiveIntegerField(default=0)),
                ('successful_notifications', models.PositiveIntegerField(default=0)),
                ('failed_notifications', models.PositiveIntegerField(default=0)),
                ('filters_applied', models.JSONField(blank=True, default=dict)),
                ('errors', models.JSONField(blank=True, default=list)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_order_confirmations', models.BooleanField(default=True)),
                ('email_pickup_reminders', models.BooleanField(default=True)),
                ('email_return_reminders', models.BooleanField(default=True)),
                ('email_overdue_notices', models.BooleanField(default=True)),
                ('email_payment_reminders', models.BooleanField(default=True)),
                ('email_payment_confirmations', models.BooleanField(default=True)),
                ('email_promotional', models.BooleanField(default=False)),
                ('sms_pickup_reminders', models.BooleanField(default=True)),
                ('sms_return_reminders', models.BooleanField(default=True)),
                ('sms_overdue_notices', models.BooleanField(default=True)),
                ('sms_payment_reminders', models.BooleanField(default=False)),
                ('sms_delivery_updates', models.BooleanField(default=True)),
                ('push_all_notifications', models.BooleanField(default=True)),
                ('push_order_updates', models.BooleanField(default=True)),
                ('push_payment_updates', models.BooleanField(default=True)),
                ('push_promotional', models.BooleanField(default=False)),
                ('whatsapp_enabled', models.BooleanField(default=False)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('email_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily_digest', 'Daily Digest'), ('weekly_digest', 'Weekly Digest')], default='immediate', max_length=15)),
                ('quiet_hours_start', models.TimeField(default='22:00:00')),
                ('quiet_hours_end', models.TimeField(default='08:00:00')),
                ('timezone', models.CharField(default='Asia/Kolkata', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Setting',
                'verbose_name_plural': 'Notification Settings',
                'db_table': 'notification_settings',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('ORDER_CONFIRMATION', 'Order Confirmation'), ('PICKUP_REMINDER', 'Pickup Reminder'), ('RETURN_REMINDER', 'Return Reminder'), ('OVERDUE_NOTICE', 'Overdue Notice'), ('PAYMENT_REMINDER', 'Payment Reminder'), ('PAYMENT_CONFIRMATION', 'Payment Confirmation'), ('QUOTE_SENT', 'Quote Sent'), ('DELIVERY_UPDATE', 'Delivery Update'), ('MAINTENANCE_ALERT', 'Maintenance Alert'), ('CUSTOM', 'Custom Notification')], max_length=25)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification'), ('WHATSAPP', 'WhatsApp')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('available_variables', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system_template', models.BooleanField(default=False)),
                ('send_immediately', models.BooleanField(default=True)),
                ('delay_minutes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'constraints': [models.UniqueConstraint(fields=('notification_type', 'channel'), name='unique_template_type_channel')],
            },
        ),
        migrations.CreateModel(
            name='ScheduledNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('schedule_type', models.CharField(choices=[('PICKUP_REMINDER', 'Pickup Reminder'), ('RETURN_REMINDER', 'Return Reminder'), ('PAYMENT_REMINDER', 'Payment Reminder'), ('OVERDUE_CHECK', 'Overdue Check'), ('MAINTENANCE_REMINDER', 'Maintenance Reminder')], max_length=25)),
                ('days_before_event', models.IntegerField(default=1)),
                ('days_after_event', models.IntegerField(default=0)),
                ('frequency', models.CharField(choices=[('ONCE', 'Once'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], default='ONCE', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('send_time', models.TimeField(default='10:00:00')),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('next_run_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Scheduled Notification',
                'verbose_name_plural': 'Scheduled Notifications',
                'db_table': 'scheduled_notifications',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('notification_type', models.CharField(choices=[('ORDER_CONFIRMATION', 'Order Confirmation'), ('PICKUP_REMINDER', 'Pickup Reminder'), ('RETURN_REMINDER', 'Return Reminder'), ('OVERDUE_NOTICE', 'Overdue Notice'), ('PAYMENT_REMINDER', 'Payment Reminder'), ('PAYMENT_CONFIRMATION', 'Payment Confirmation'), ('QUOTE_SENT', 'Quote Sent'), ('DELIVERY_UPDATE', 'Delivery Update'), ('MAINTENANCE_ALERT', 'Maintenance Alert'), ('CUSTOM', 'Custom Notification')], max_length=25)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification'), ('WHATSAPP', 'WhatsApp')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('scheduled_for', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SCHEDULED', 'Scheduled'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=15)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('provider_message_id', models.CharField(blank=True, max_length=255)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='invoicing.invoice')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.rentalorder')),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.reservation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='notificatio_user_id_8ab96f_idx'), models.Index(fields=['status', 'scheduled_for'], name='notificatio_status_2554f4_idx'), models.Index(fields=['notification_type', 'channel'], name='notificatio_notific_1897f3_idx'), models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx')],
            },
        ),
    ]
