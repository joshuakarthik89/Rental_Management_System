# Generated by Django 5.1.11 on 2025-08-11 09:11

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=64, unique=True)),
                ('scopes', models.JSONField(default=list)),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=60)),
                ('rate_limit_per_hour', models.PositiveIntegerField(default=1000)),
                ('rate_limit_per_day', models.PositiveIntegerField(default=10000)),
                ('allowed_ips', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('REVOKED', 'Revoked'), ('EXPIRED', 'Expired'), ('SUSPENDED', 'Suspended')], default='ACTIVE', max_length=15)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('total_requests', models.PositiveBigIntegerField(default=0)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'db_table': 'api_keys',
            },
        ),
        migrations.CreateModel(
            name='ExternalIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('integration_type', models.CharField(choices=[('ACCOUNTING', 'Accounting System'), ('CRM', 'CRM System'), ('INVENTORY', 'Inventory Management'), ('PAYMENT', 'Payment Gateway'), ('SHIPPING', 'Shipping Provider'), ('ANALYTICS', 'Analytics Platform'), ('CUSTOM', 'Custom Integration')], max_length=15)),
                ('description', models.TextField(blank=True)),
                ('base_url', models.URLField(blank=True)),
                ('api_key', models.TextField(blank=True)),
                ('api_secret', models.TextField(blank=True)),
                ('additional_config', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('ERROR', 'Error'), ('TESTING', 'Testing')], default='INACTIVE', max_length=15)),
                ('is_enabled', models.BooleanField(default=False)),
                ('auto_sync', models.BooleanField(default=False)),
                ('sync_interval_minutes', models.PositiveIntegerField(default=60)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True)),
                ('consecutive_errors', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_external_integrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'External Integration',
                'verbose_name_plural': 'External Integrations',
                'db_table': 'external_integrations',
            },
        ),
        migrations.CreateModel(
            name='WebhookEndpoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('event_types', models.JSONField(default=list)),
                ('secret', models.CharField(max_length=64)),
                ('is_active', models.BooleanField(default=True)),
                ('retry_count', models.PositiveIntegerField(default=3)),
                ('timeout_seconds', models.PositiveIntegerField(default=30)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('FAILED', 'Failed')], default='ACTIVE', max_length=15)),
                ('last_delivery_at', models.DateTimeField(blank=True, null=True)),
                ('consecutive_failures', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_endpoints', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Webhook Endpoint',
                'verbose_name_plural': 'Webhook Endpoints',
                'db_table': 'webhook_endpoints',
            },
        ),
        migrations.CreateModel(
            name='WebhookDelivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('ORDER_CREATED', 'Order Created'), ('ORDER_UPDATED', 'Order Updated'), ('ORDER_CANCELLED', 'Order Cancelled'), ('PAYMENT_COMPLETED', 'Payment Completed'), ('PAYMENT_FAILED', 'Payment Failed'), ('RENTAL_STARTED', 'Rental Started'), ('RENTAL_ENDED', 'Rental Ended'), ('ITEM_OVERDUE', 'Item Overdue'), ('DELIVERY_COMPLETED', 'Delivery Completed'), ('RETURN_COMPLETED', 'Return Completed')], max_length=25)),
                ('payload', models.JSONField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed'), ('RETRYING', 'Retrying')], default='PENDING', max_length=15)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('max_attempts', models.PositiveIntegerField(default=3)),
                ('response_status', models.PositiveIntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='api.webhookendpoint')),
            ],
            options={
                'verbose_name': 'Webhook Delivery',
                'verbose_name_plural': 'Webhook Deliveries',
                'db_table': 'webhook_deliveries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIRateLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=255)),
                ('minute_count', models.PositiveIntegerField(default=0)),
                ('hour_count', models.PositiveIntegerField(default=0)),
                ('day_count', models.PositiveIntegerField(default=0)),
                ('minute_reset', models.DateTimeField()),
                ('hour_reset', models.DateTimeField()),
                ('day_reset', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apikey')),
            ],
            options={
                'db_table': 'api_rate_limits',
                'unique_together': {('api_key', 'endpoint')},
            },
        ),
        migrations.CreateModel(
            name='APIRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method', models.CharField(max_length=10)),
                ('endpoint', models.CharField(max_length=255)),
                ('query_params', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('status_code', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('ERROR', 'Error'), ('TIMEOUT', 'Timeout'), ('RATE_LIMITED', 'Rate Limited'), ('UNAUTHORIZED', 'Unauthorized')], max_length=15)),
                ('response_time_ms', models.PositiveIntegerField()),
                ('response_size_bytes', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.apikey')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Request',
                'verbose_name_plural': 'API Requests',
                'db_table': 'api_requests',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['api_key', 'timestamp'], name='api_request_api_key_cb0f34_idx'), models.Index(fields=['endpoint', 'timestamp'], name='api_request_endpoin_2c1c1e_idx'), models.Index(fields=['status', 'timestamp'], name='api_request_status_8f2df3_idx')],
            },
        ),
    ]
